datasource db {
  provider = "postgresql"
  url      = "postgresql://bottable:123123@localhost:5432/bottable-db?schema=public"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id Int @id @default(autoincrement())

  firstName String
  lastName  String
  email     String  @unique
  password  String
  confirmed Boolean @default(false)

  trackers Tracker[]

  memberships Memberships[]
}

model Tracker {
  id Int @id @default(autoincrement())

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  Team   Team? @relation(fields: [teamId], references: [id])
  teamId Int?

  selectors Selector[]

  notificationMethods NotificationMethods[]

  tags Tag[]

  description     String
  name            String  @default("New Tracker")
  notifyAnyway    Boolean @default(false)
  pinned          Boolean @default(false)
  updateFrequency String  @default("0 5 29 2 *")
  url             String
}

model Selector {
  id Int @id @default(autoincrement())

  values Value[]

  trackerId Int
  tracker   Tracker @relation(fields: [trackerId], references: [id])

  alertTriggerId Int
  alertTrigger   AlertTrigger @relation(fields: [alertTriggerId], references: [id])

  name     String
  location String
  category SelectorCategoryType
  type     SelectorType
}

model Value {
  id Int @id @default(autoincrement())

  selectorId Int
  selector   Selector @relation(fields: [selectorId], references: [id])

  timestamp DateTime
  value     String
}

model AlertTrigger {
  id Int @id @default(autoincrement())

  type AlertTriggerTypes @default(CHANGE)

  selectors Selector[]

  payload String?
}

model Tag {
  id Int @id @default(autoincrement())

  trackerId Int?
  tracker   Tracker? @relation(fields: [trackerId], references: [id])

  name  String
  color String
}

model Memberships {
  id Int @id @default(autoincrement())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  teamId Int
  team   Team @relation(fields: [teamId], references: [id])

  role RoleType @default(MEMBER)
}

model Team {
  id Int @id @default(autoincrement())

  trackers Tracker[]

  memberships Memberships[]
}

enum AlertTriggerTypes {
  CHANGE
  INCREASE
  DECREASE

  GREATER_THAN
  LESS_THAN
  CONTAIN
}

enum NotificationMethods {
  EMAIL
  SMS
}

enum RoleType {
  ADMIN
  MEMBER
}

enum SelectorType {
  STRING
  NUMBER
}

enum SelectorCategoryType {
  PRICE
  NAME
  DESCRIPTION
  IMAGE
  OTHER
}
